{"version":3,"sources":["reportWebVitals.js","components/Main.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","root","margin","spacing","title","marginTop","marginBottom","tableGrid","properties","width","formControl","Main","useState","progress","setProgress","order","setOrder","useEffect","console","log","JSON","parse","classes","Container","Typography","variant","className","TextField","id","label","defaultValue","autoComplete","FormControl","InputLabel","Select","labelId","value","onChange","event","target","MenuItem","Button","color","onClick","query","column_name","prefix","column_value","document","querySelector","fetch","response","json","data","result","Grid","container","justify","TableContainer","component","Paper","Table","table","TableHead","TableRow","TableCell","TableBody","map","row_data_packet","key","name","content","date","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0e4439dd.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Container from '@material-ui/core/Container';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  title: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  tableGrid: {\n    marginTop: theme.spacing(3),\n  },\n  properties: {\n    width: 200,\n  },\n  formControl: {\n    width: 152,\n  },\n  margin: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  }\n}));\n\nconst Main = () => {\n  const [progress, setProgress] = useState('');\n  const [order, setOrder] = useState('');\n\n  const handleChange = (event) => {\n    setOrder(event.target.value);\n    console.log('順序', event.target.value);\n  };\n\n  const fetch_posts_from_db = () => {\n    let query = '';\n    for (const column_name of ['name', 'limit']) {\n      let prefix = query === '' ? '?' : '&';\n      if (column_name === 'limit') {\n        query = `${query}${prefix}order=date,${order}`;\n        prefix = '&';\n      }\n\n      const column_value = document.querySelector(`#${column_name}`).value;\n      if (column_value !== '') query = `${query}${prefix}${column_name}=${column_value}`;\n    }\n\n    console.log('query', query);\n\n    fetch(`/api${query}`)\n    .then((response) => response.json())\n    .then((data) => setProgress(data.result));\n  }\n\n  useEffect(() => {\n    if (progress === '') return false;\n    console.log(JSON.parse(progress));\n  });\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Container>\n        <Typography variant=\"h5\" className={classes.title}>💪進捗リスト💪</Typography>\n\n        <Container className={`${classes.margin} ${classes.properties}`}>\n          <TextField id=\"limit\" label=\"表示件数\" defaultValue={10} autoComplete=\"off\" />\n        </Container>\n\n        <Container className={`${classes.margin} ${classes.properties}`}>\n          <TextField id=\"name\" label=\"ユーザー名\" autoComplete=\"off\" />\n        </Container>\n\n        <Container className={`${classes.margin} ${classes.properties}`}>\n          <FormControl className={`${classes.margin} ${classes.formControl}`}>\n            <InputLabel id=\"demo-simple-select-label\">ソート順</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={order}\n              defaultValue=\"ASC\"\n              onChange={handleChange}\n            >\n              <MenuItem value=\"ASC\">昇順</MenuItem>\n              <MenuItem value=\"DESC\">降順</MenuItem>\n            </Select>\n          </FormControl>\n        </Container>\n\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          onClick={fetch_posts_from_db}\n          className={classes.margin}\n        >\n          データを取得する\n        </Button>\n      </Container>\n\n      <Grid container justify = \"center\" className={classes.tableGrid}>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>ユーザー</TableCell>\n                <TableCell>投稿日時</TableCell>\n                <TableCell>投稿内容</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {(progress === '' ? [] : JSON.parse(progress)).map((row_data_packet, key) => {\n                const { name, content, date } = row_data_packet;\n                return (\n                  <TableRow key={key}>\n                    <TableCell>{ name }</TableCell>\n                    <TableCell>{ date }</TableCell>\n                    <TableCell>{ content }</TableCell>\n                  </TableRow>\n                )\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n    </>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport Main from './components/Main';\nimport './index.css';\n\nReactDOM.render(\n  <>\n  {/* // <React.StrictMode> */}\n    <Main />\n  {/* // </React.StrictMode>, */}\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}