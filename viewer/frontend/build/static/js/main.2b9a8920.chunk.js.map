{"version":3,"sources":["reportWebVitals.js","components/Main.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","root","margin","spacing","title","marginTop","marginBottom","tableGrid","properties","width","formControl","Main","classes","useState","fetchDisabled","setFetchDisabled","progress","setProgress","orderBy","setOrderBy","order","setOrder","error","setError","Container","Typography","variant","className","Grid","container","justify","item","xs","TextField","id","label","type","placeholder","defaultValue","autoComplete","onChange","event","console","log","target","value","FormControl","InputLabel","Select","labelId","MenuItem","Button","color","onClick","query","column_name","prefix","column_value","document","querySelector","fetch","response","json","data","result","setTimeout","disabled","JSON","parse","length","TableContainer","Table","table","TableHead","TableRow","TableCell","TableBody","map","row_data_packet","key","name","content","date","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2b9a8920.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Container from '@material-ui/core/Container';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  title: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  tableGrid: {\n    marginTop: theme.spacing(2),\n  },\n  properties: {\n    width: '80%',\n  },\n  formControl: {\n    width: '80%',\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  }\n}));\n\nconst Main = () => {\n  const classes = useStyles();\n  const [fetchDisabled, setFetchDisabled] = useState(false);\n  const [progress, setProgress] = useState('');\n  const [orderBy, setOrderBy] = useState('date');\n  const [order, setOrder] = useState('DESC');\n  const [error, setError] = useState(false);\n\n  const handleOrderByChange = (event) => {\n    setOrderBy(event.target.value);\n  }\n\n  const handleOrderChange = (event) => {\n    setOrder(event.target.value);\n  };\n\n  const handleLimitChange = (event) => {\n    console.log(event.target.value);\n    if (event.target.value < 0) return setError(true);\n    if (event.target.value === '') return setError(true);\n    setError(false);\n  }\n\n  const fetch_posts_from_db = () => {\n    if (error) return false;\n    if (!fetchDisabled) setFetchDisabled(true);\n\n    let query = '';\n    for (const column_name of ['name', 'limit']) {\n      let prefix = query === '' ? '?' : '&';\n      if (column_name === 'limit') {\n        query = `${query}${prefix}order=${orderBy},${order}`;\n        prefix = '&';\n      }\n\n      const column_value = document.querySelector(`#${column_name}`).value;\n      if (column_value !== '' && column_value !== '*') query = `${query}${prefix}${column_name}=${column_value}`;\n    }\n\n    fetch(`/api${query}`)\n    .then((response) => response.json())\n    .then((data) => {\n      setProgress(data.result);\n      // 連打してサーバーへの過度なアクセスを防ぐ為に 2.5 秒のクールダウンを発生させる\n      setTimeout(() => setFetchDisabled(false), 2500);\n    });\n  }\n\n  return (\n    <>\n      <Container>\n        <Typography variant='h5' className={classes.title}>💪進捗リスト💪</Typography>\n\n        <Grid container justify='center' className={classes.margin}>\n          <Grid item xs={3}>\n            <TextField\n              id='limit'\n              label='表示件数'\n              type='number'\n              placeholder='全件'\n              defaultValue={100}\n              autoComplete='off'\n              className={classes.properties}\n              onChange={handleLimitChange}\n              error={error}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              id='name'\n              label='ユーザー名'\n              placeholder='全員'\n              defaultValue='*'\n              autoComplete='off'\n              className={classes.properties}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container justify='center' className={classes.margin}>\n          <Grid item xs={3}>\n            <FormControl className={classes.formControl}>\n              <InputLabel id='order-by-select'>ソートする値</InputLabel>\n              <Select\n                labelId='order-by-select'\n                id='order-by-select'\n                value={orderBy}\n                defaultValue='date'\n                onChange={handleOrderByChange}\n              >\n                <MenuItem value='date'>日付</MenuItem>\n                <MenuItem value='name'>名前</MenuItem>\n                <MenuItem value='content'>内容</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={3}>\n            <FormControl className={classes.formControl}>\n              <InputLabel id='order-select'>ソート順</InputLabel>\n              <Select\n                labelId='order-select'\n                id='order-select'\n                value={order}\n                defaultValue='ASC'\n                onChange={handleOrderChange}\n              >\n                <MenuItem value='ASC'>昇順</MenuItem>\n                <MenuItem value='DESC'>降順</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n\n        <Button\n          variant='outlined'\n          color='secondary'\n          onClick={fetch_posts_from_db}\n          className={classes.margin}\n          disabled={fetchDisabled}\n        >\n          データを取得する\n        </Button>\n      </Container>\n\n      <Grid container justify = 'center' className={classes.tableGrid}>\n        {\n          error || progress === '' || JSON.parse(progress).length === 0 ?\n            (\n              <Typography>\n                {error ? '使えない値が入力されているよ' : progress === '' ? 'データを取得するボタンを押してね' : 'データが見つからないよ！'}\n              </Typography>\n            )\n          :\n            (\n              <TableContainer>\n                <Table className={classes.table} aria-label='simple table'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>ユーザー</TableCell>\n                      <TableCell>投稿日時</TableCell>\n                      <TableCell>投稿内容</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {JSON.parse(progress).map((row_data_packet, key) => {\n                      const { name, content, date } = row_data_packet;\n                      return (\n                        <TableRow key={key}>\n                          <TableCell>{ name }</TableCell>\n                          <TableCell>{ date }</TableCell>\n                          <TableCell>{ content }</TableCell>\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            )\n        }\n      </Grid>\n    </>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport Main from './components/Main';\nimport './index.css';\n\nReactDOM.render(\n  <>\n    <Main />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}