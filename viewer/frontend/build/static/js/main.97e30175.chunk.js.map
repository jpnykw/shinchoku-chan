{"version":3,"sources":["reportWebVitals.js","components/Button.js","components/Container.js","components/FormControl.js","components/FormControlLabel.js","components/Grid.js","components/InputLabel.js","components/MenuItem.js","components/Select.js","components/Switch.js","components/TextField.js","components/Typography.js","components/Table.js","components/TableBody.js","components/TableCell.js","components/TableContainer.js","components/TableHead.js","components/TableRow.js","pages/TableView.js","pages/GraphView.js","pages/Main.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Button","props","Container","FormControl","FormControlLabel","Grid","InputLabel","MenuItem","React","forwardRef","ref","Select","Switch","TextField","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","zero_pad","args","map","number","length","Number","parse_date","date_string","date","split","time","year","month","day","join","hour","minute","second","utc_to_jst","utc","Date","setHours","getHours","result","zero_pad_date","toLocaleString","useStyles","makeStyles","theme","root","margin","spacing","tableGrid","marginTop","TableView","classes","error","progress","container","justify","className","JSON","parse","table","row_data_packet","key","name","content","style","background","lineChart","position","right","Graph","LineChart","width","height","data","jpnykw","mirukuma","luckYrat","top","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","type","stroke","activeDot","r","title","marginBottom","formControl","properties","Main","useState","fetchDisabled","setFetchDisabled","setProgress","orderBy","setOrderBy","order","setOrder","setError","item","setItem","switchState","setSwitchState","variant","xs","id","label","placeholder","defaultValue","autoComplete","onChange","event","target","value","labelId","control","checked","color","onClick","query","column_name","prefix","column_value","document","querySelector","fetch","response","json","setTimeout","disabled","GraphView","ReactDOM","render"],"mappings":"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","file":"static/js/main.97e30175.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { default as MaterialButton } from '@material-ui/core/Button';\n\nconst Button = (props) => {\n  return (\n    <MaterialButton {...props} />\n  );\n};\n\nexport default Button;","import { default as MaterialContainer } from '@material-ui/core/Container';\n\nconst Container = (props) => {\n  return (\n    <MaterialContainer {...props} />\n  );\n};\n\nexport default Container;","import { default as MaterialFormControl } from '@material-ui/core/FormControl';\n\nconst FormControl = (props) => {\n  return (\n    <MaterialFormControl {...props} />\n  );\n};\n\nexport default FormControl;","import { default as MaterialFormControlLabel } from '@material-ui/core/FormControlLabel';\n\nconst FormControlLabel = (props) => {\n  return (\n    <MaterialFormControlLabel {...props} />\n  );\n};\n\nexport default FormControlLabel;\n","import { default as MaterialGrid } from '@material-ui/core/Grid';\n\nconst Grid = (props) => {\n  return (\n    <MaterialGrid {...props} />\n  );\n};\n\nexport default Grid;","import { default as MaterialInputLabel } from '@material-ui/core/InputLabel';\n\nconst InputLabel = (props) => {\n  return (\n    <MaterialInputLabel {...props} />\n  );\n};\n\nexport default InputLabel;","import React from 'react';\nimport { default as MaterialMenuItem } from '@material-ui/core/MenuItem';\n\nconst MenuItem = React.forwardRef((props, ref) => {\n  return (\n    <MaterialMenuItem {...props} ref={ref} />\n  );\n});\n\nexport default MenuItem;","import { default as MaterialSelect } from '@material-ui/core/Select';\n\nconst Select = (props) => {\n  return (\n    <MaterialSelect {...props} />\n  );\n};\n\nexport default Select;","import { default as MaterialSwitch } from '@material-ui/core/Switch';\n\nconst Switch = (props) => {\n  return (\n    <MaterialSwitch {...props} />\n  );\n};\n\nexport default Switch;\n","import { default as MaterialTextField } from '@material-ui/core/TextField';\n\nconst TextField = (props) => {\n  return (\n    <MaterialTextField {...props} />\n  );\n};\n\nexport default TextField;","import { default as MaterialTypography } from '@material-ui/core/Typography';\n\nconst Typography = (props) => {\n  return (\n    <MaterialTypography {...props} />\n  );\n};\n\nexport default Typography;","import { default as MaterialTable } from '@material-ui/core/Table';\n\nconst Table = (props) => {\n  return (\n    <MaterialTable {...props} />\n  );\n};\n\nexport default Table;","import { default as MaterialTableBody } from '@material-ui/core/TableBody';\n\nconst TableBody = (props) => {\n  return (\n    <MaterialTableBody {...props} />\n  );\n};\n\nexport default TableBody;","import { default as MaterialTableCell } from '@material-ui/core/TableCell';\n\nconst TableCell = (props) => {\n  return (\n    <MaterialTableCell {...props} />\n  );\n};\n\nexport default TableCell;","import { default as MaterialTableContainer } from '@material-ui/core/TableContainer';\n\nconst TableContainer = (props) => {\n  return (\n    <MaterialTableContainer {...props} />\n  );\n};\n\nexport default TableContainer;","import { default as MaterialTableHead } from '@material-ui/core/TableHead';\n\nconst TableHead = (props) => {\n  return (\n    <MaterialTableHead {...props} />\n  );\n};\n\nexport default TableHead;","import { default as MaterialTableRow } from '@material-ui/core/TableRow';\n\nconst TableRow = (props) => {\n  return (\n    <MaterialTableRow {...props} />\n  );\n};\n\nexport default TableRow;","import { makeStyles } from '@material-ui/core/styles';\n\nimport Grid from '../components/Grid.js';\nimport Table from '../components/Table.js';\nimport TableBody from '../components/TableBody.js';\nimport TableCell from '../components/TableCell.js';\nimport TableContainer from '../components/TableContainer.js';\nimport TableHead from '../components/TableHead.js';\nimport TableRow from '../components/TableRow.js';\nimport Typography from '../components/Typography.js';\n\nconst zero_pad = (...args) => {\n  return args.map(number => {\n    if (number.length > 1 && number[0] === '0') return number;\n    return `${Number(number) < 10 ? '0' : ''}${number}`;\n  });\n}\n\nconst parse_date = (date_string) => {\n  let date = date_string.split(' ')[0];\n  let time = date_string.split(' ')[1];\n\n  const [year, month, day] = date.split('/');\n  date = zero_pad(year, month, day).join('/');\n  const [hour, minute, second] = time.split(':');\n  time = zero_pad(hour, minute, second).join(':');\n  return `${date} ${time}`;\n}\n\nconst zero_pad_date = (date_string = null) => {\n  if (date_string === null) return null;\n  return parse_date(date_string);\n}\n\nconst utc_to_jst = (utc) => {\n  const date = new Date(utc);\n  date.setHours(date.getHours() + 9);\n  const result = zero_pad_date(date.toLocaleString('ja'));\n  return result === null ? 'タイムスタンプが不正な値です' : result;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  tableGrid: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst TableView = (props) => {\n  const classes = useStyles();\n  const error = props.error;\n  const progress = props.progress || '';\n\n  return (\n    <Grid container justify = 'center' className={classes.tableGrid}>\n      {\n        error || progress === '' || JSON.parse(progress).length === 0 ?\n          (\n            <Typography>\n              {\n                error ?\n                  '使えない値が入力されているよ'\n                :\n                progress === '' ?\n                  'データを取得するボタンを押してね'\n                :\n                  'データが見つからないよ'\n              }\n            </Typography>\n          )\n        :\n          (\n            <TableContainer>\n              <Table className={classes.table} aria-label='simple table'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>ユーザー</TableCell>\n                    <TableCell>投稿日時(JST)</TableCell>\n                    <TableCell>投稿内容</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {JSON.parse(progress).map((row_data_packet, key) => {\n                    const { name, content, date } = row_data_packet;\n                    return (\n                      <TableRow\n                        style={\n                          key % 2 === 0 ? \n                          { background : '#f7fafc' } :\n                          { background : 'white' }\n                        }\n                        key={key}\n                      >\n                        <TableCell>{ name }</TableCell>\n                        <TableCell>{ utc_to_jst(date) }</TableCell>\n                        <TableCell>{ content }</TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )\n      }\n    </Grid>\n  );\n}\n\nexport default TableView;\n\n","import { makeStyles } from '@material-ui/core/styles';\n\nimport Grid from '../components/Grid.js';\n\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from 'recharts';\n\nconst useStyles = makeStyles((theme) => ({\n  lineChart: {\n    marginTop: theme.spacing(2),\n    position: 'relative',\n    right: '20px',\n  }\n}));\n\nconst Graph = () => {\n  const classes = useStyles();\n\n  // TODO: DBから取得したデータをもとに変換する\n  const data = [\n    {\n      name: \"07/03\",\n      jpnykw: 2,\n      mirukuma: 5,\n      luckYrat: 3,\n    },\n    {\n      name: \"07/02\",\n      jpnykw: 1,\n      mirukuma: 3,\n      luckYrat: 5,\n    },\n    {\n      name: \"07/01\",\n      jpnykw: 2,\n      mirukuma: 2,\n      luckYrat: 2,\n    },\n    {\n      name: \"06/30\",\n      jpnykw: 3,\n      mirukuma: 1,\n      luckYrat: 2,\n    },\n  ];\n\n  return (\n    <Grid container justify = 'center'>\n      <LineChart\n        width={500}\n        height={300}\n        data={data}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        }}\n        className={classes.lineChart}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line\n          type=\"monotone\"\n          dataKey=\"jpnykw\"\n          stroke=\"#8884d8\"\n          activeDot={{ r: 8 }}\n        />\n        <Line type=\"monotone\" dataKey=\"mirukuma\" stroke=\"#82ca9d\" />\n        <Line type=\"monotone\" dataKey=\"luckYrat\" stroke=\"#cd8a9a\" />\n\n      </LineChart>\n    </Grid>\n  );\n}\n\nexport default Graph;\n","import { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '../components/Button.js';\nimport Container from '../components/Container.js';\nimport FormControl from '../components/FormControl.js';\nimport FormControlLabel from '../components/FormControlLabel.js';\nimport Grid from '../components/Grid.js';\nimport InputLabel from '../components/InputLabel.js';\nimport MenuItem from '../components/MenuItem.js';\nimport Select from '../components/Select.js';\nimport Switch from '../components/Switch.js';\nimport TextField from '../components/TextField.js';\nimport Typography from '../components/Typography.js';\n\nimport TableView from './TableView.js';\nimport GraphView from './GraphView.js';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  title: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  formControl: {\n    width: '80%',\n  },\n  properties: {\n    width: '80%',\n  },\n}));\n\nconst Main = () => {\n  const classes = useStyles();\n  const [fetchDisabled, setFetchDisabled] = useState(false);\n  const [progress, setProgress] = useState('');\n  const [orderBy, setOrderBy] = useState('date');\n  const [order, setOrder] = useState('DESC');\n  const [error, setError] = useState(false);\n  const [item, setItem] = useState(['古い順', '新しい順']);\n  const [switchState, setSwitchState] = useState(false);\n\n  const handleOrderByChange = (event) => {\n    setOrderBy(event.target.value);\n    if (event.target.value === 'date') setItem(['古い順', '新しい順']);\n    else setItem(['50音順 (A~Z)', '50音順 (Z~A)']);\n  }\n\n  const handleOrderChange = (event) => {\n    setOrder(event.target.value);\n  };\n\n  const handleLimitChange = (event) => {\n    if (event.target.value < 0) return setError(true);\n    if (event.target.value === '') return setError(true);\n    setError(false);\n  }\n\n  const handleSwitchChange = (event) => {\n    setSwitchState(event.target.checked);\n  }\n\n  const fetch_posts_from_db = () => {\n    if (error) return false;\n    if (!fetchDisabled) setFetchDisabled(true);\n\n    let query = '';\n    for (const column_name of ['name', 'limit']) {\n      let prefix = query === '' ? '?' : '&';\n      if (column_name === 'limit') {\n        query = `${query}${prefix}order=${orderBy},${order}`;\n        prefix = '&';\n      }\n\n      const column_value = document.querySelector(`#${column_name}`).value;\n      if (column_value !== '' && column_value !== '*') query = `${query}${prefix}${column_name}=${column_value}`;\n    }\n\n    fetch(`/api${query}`)\n    .then((response) => response.json())\n    .then((data) => {\n      setProgress(data.result);\n      // 連打してサーバーへの過度なアクセスを防ぐ為に 2.5 秒のクールダウンを発生させる\n      setTimeout(() => setFetchDisabled(false), 2500);\n    });\n  }\n\n  return (\n    <>\n      <Container>\n        <Typography variant='h5' className={classes.title}>💪進捗リスト💪</Typography>\n\n        <Grid container justify='center' className={classes.margin}>\n          <Grid item xs={3}>\n            <TextField\n              id='limit'\n              label='表示件数'\n              type='number'\n              placeholder='全件'\n              defaultValue={100}\n              autoComplete='off'\n              className={classes.properties}\n              onChange={handleLimitChange}\n              error={error}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              id='name'\n              label='ユーザー名'\n              placeholder='全員'\n              defaultValue='*'\n              autoComplete='off'\n              className={classes.properties}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container justify='center' className={classes.margin}>\n          <Grid item xs={3}>\n            <FormControl className={classes.formControl}>\n              <InputLabel id='order-by-select'>ソートする値</InputLabel>\n              <Select\n                labelId='order-by-select'\n                id='order-by-select'\n                value={orderBy}\n                defaultValue='date'\n                onChange={handleOrderByChange}\n              >\n                <MenuItem value='date'>日付</MenuItem>\n                <MenuItem value='name'>名前</MenuItem>\n                <MenuItem value='content'>内容</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={3}>\n            <FormControl className={classes.formControl}>\n              <InputLabel id='order-select'>ソート順</InputLabel>\n              <Select\n                labelId='order-select'\n                id='order-select'\n                value={order}\n                defaultValue='ASC'\n                onChange={handleOrderChange}\n              >\n                <MenuItem value='ASC'>{item[0]}</MenuItem>\n                <MenuItem value='DESC'>{item[1]}</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n\n        <Container>\n          <FormControlLabel\n            control={<Switch checked={switchState} onChange={handleSwitchChange} name=\"checkedA\" />}\n            label=\"グラフで表示する\"\n          />\n        </Container>\n\n        <Button\n          variant='outlined'\n          color='secondary'\n          onClick={fetch_posts_from_db}\n          className={classes.margin}\n          disabled={fetchDisabled}\n        >\n          データを取得する\n        </Button>\n      </Container>\n\n      {\n        switchState ?\n          (\n            <GraphView />\n          )\n        :\n          (\n            <TableView error={error} progress={progress} />\n          )\n      }\n    </>\n  );\n}\n\nexport default Main;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport Main from './pages/Main';\nimport './index.css';\n\nReactDOM.render(<Main />, document.querySelector('#root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}