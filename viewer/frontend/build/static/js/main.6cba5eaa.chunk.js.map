{"version":3,"sources":["reportWebVitals.js","components/Button.js","components/Container.js","components/FormControl.js","components/Grid.js","components/InputLabel.js","components/MenuItem.js","components/Select.js","components/TextField.js","components/Typography.js","components/Table.js","components/TableBody.js","components/TableCell.js","components/TableContainer.js","components/TableHead.js","components/TableRow.js","pages/TableView.js","pages/Main.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Button","props","Container","FormControl","Grid","InputLabel","MenuItem","React","forwardRef","ref","Select","TextField","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","zero_pad","args","map","number","length","Number","parse_date","date_string","date","split","time","year","month","day","join","hour","minute","second","utc_to_jst","utc","Date","setHours","getHours","result","zero_pad_date","toLocaleString","useStyles","makeStyles","theme","root","margin","spacing","tableGrid","marginTop","TableView","classes","error","progress","container","justify","className","JSON","parse","table","row_data_packet","key","name","content","style","background","title","marginBottom","formControl","width","properties","Main","useState","fetchDisabled","setFetchDisabled","setProgress","orderBy","setOrderBy","order","setOrder","setError","item","setItem","variant","xs","id","label","type","placeholder","defaultValue","autoComplete","onChange","event","target","value","labelId","color","onClick","query","column_name","prefix","column_value","document","querySelector","fetch","response","json","data","setTimeout","disabled","ReactDOM","render"],"mappings":"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","file":"static/js/main.6cba5eaa.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { default as MaterialButton } from '@material-ui/core/Button';\n\nconst Button = (props) => {\n  return (\n    <MaterialButton {...props} />\n  );\n};\n\nexport default Button;","import { default as MaterialContainer } from '@material-ui/core/Container';\n\nconst Container = (props) => {\n  return (\n    <MaterialContainer {...props} />\n  );\n};\n\nexport default Container;","import { default as MaterialFormControl } from '@material-ui/core/FormControl';\n\nconst FormControl = (props) => {\n  return (\n    <MaterialFormControl {...props} />\n  );\n};\n\nexport default FormControl;","import { default as MaterialGrid } from '@material-ui/core/Grid';\n\nconst Grid = (props) => {\n  return (\n    <MaterialGrid {...props} />\n  );\n};\n\nexport default Grid;","import { default as MaterialInputLabel } from '@material-ui/core/InputLabel';\n\nconst InputLabel = (props) => {\n  return (\n    <MaterialInputLabel {...props} />\n  );\n};\n\nexport default InputLabel;","import React from 'react';\nimport { default as MaterialMenuItem } from '@material-ui/core/MenuItem';\n\nconst MenuItem = React.forwardRef((props, ref) => {\n  return (\n    <MaterialMenuItem {...props} ref={ref} />\n  );\n});\n\nexport default MenuItem;","import { default as MaterialSelect } from '@material-ui/core/Select';\n\nconst Select = (props) => {\n  return (\n    <MaterialSelect {...props} />\n  );\n};\n\nexport default Select;","import { default as MaterialTextField } from '@material-ui/core/TextField';\n\nconst TextField = (props) => {\n  return (\n    <MaterialTextField {...props} />\n  );\n};\n\nexport default TextField;","import { default as MaterialTypography } from '@material-ui/core/Typography';\n\nconst Typography = (props) => {\n  return (\n    <MaterialTypography {...props} />\n  );\n};\n\nexport default Typography;","import { default as MaterialTable } from '@material-ui/core/Table';\n\nconst Table = (props) => {\n  return (\n    <MaterialTable {...props} />\n  );\n};\n\nexport default Table;","import { default as MaterialTableBody } from '@material-ui/core/TableBody';\n\nconst TableBody = (props) => {\n  return (\n    <MaterialTableBody {...props} />\n  );\n};\n\nexport default TableBody;","import { default as MaterialTableCell } from '@material-ui/core/TableCell';\n\nconst TableCell = (props) => {\n  return (\n    <MaterialTableCell {...props} />\n  );\n};\n\nexport default TableCell;","import { default as MaterialTableContainer } from '@material-ui/core/TableContainer';\n\nconst TableContainer = (props) => {\n  return (\n    <MaterialTableContainer {...props} />\n  );\n};\n\nexport default TableContainer;","import { default as MaterialTableHead } from '@material-ui/core/TableHead';\n\nconst TableHead = (props) => {\n  return (\n    <MaterialTableHead {...props} />\n  );\n};\n\nexport default TableHead;","import { default as MaterialTableRow } from '@material-ui/core/TableRow';\n\nconst TableRow = (props) => {\n  return (\n    <MaterialTableRow {...props} />\n  );\n};\n\nexport default TableRow;","// import { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Grid from '../components/Grid.js';\nimport Table from '../components/Table.js';\nimport TableBody from '../components/TableBody.js';\nimport TableCell from '../components/TableCell.js';\nimport TableContainer from '../components/TableContainer.js';\nimport TableHead from '../components/TableHead.js';\nimport TableRow from '../components/TableRow.js';\nimport Typography from '../components/Typography.js';\n\nconst zero_pad = (...args) => {\n  return args.map(number => {\n    if (number.length > 1 && number[0] === '0') return number;\n    return `${Number(number) < 10 ? '0' : ''}${number}`;\n  });\n}\n\nconst parse_date = (date_string) => {\n  let date = date_string.split(' ')[0];\n  let time = date_string.split(' ')[1];\n\n  const [year, month, day] = date.split('/');\n  date = zero_pad(year, month, day).join('/');\n  const [hour, minute, second] = time.split(':');\n  time = zero_pad(hour, minute, second).join(':');\n  return `${date} ${time}`;\n}\n\nconst zero_pad_date = (date_string = null) => {\n  if (date_string === null) return null;\n  return parse_date(date_string);\n}\n\nconst utc_to_jst = (utc) => {\n  const date = new Date(utc);\n  date.setHours(date.getHours() + 9);\n  const result = zero_pad_date(date.toLocaleString('ja'));\n  return result === null ? 'タイムスタンプが不正な値です' : result;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  tableGrid: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst TableView = (props) => {\n  const classes = useStyles();\n  const error = props.error;\n  const progress = props.progress || '';\n\n  return (\n    <Grid container justify = 'center' className={classes.tableGrid}>\n      {\n        error || progress === '' || JSON.parse(progress).length === 0 ?\n          (\n            <Typography>\n              {error ? '使えない値が入力されているよ' : progress === '' ? 'データを取得するボタンを押してね' : 'データが見つからないよ'}\n            </Typography>\n          )\n        :\n          (\n            <TableContainer>\n              <Table className={classes.table} aria-label='simple table'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>ユーザー</TableCell>\n                    <TableCell>投稿日時(JST)</TableCell>\n                    <TableCell>投稿内容</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {JSON.parse(progress).map((row_data_packet, key) => {\n                    const { name, content, date } = row_data_packet;\n                    return (\n                      <TableRow\n                        style={\n                          key % 2 === 0 ? \n                          { background : '#f7fafc' } :\n                          { background : 'white' }\n                        }\n                        key={key}\n                      >\n                        <TableCell>{ name }</TableCell>\n                        <TableCell>{ utc_to_jst(date) }</TableCell>\n                        <TableCell>{ content }</TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )\n      }\n    </Grid>\n  );\n}\n\nexport default TableView;\n\n","import { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '../components/Button.js';\nimport Container from '../components/Container.js';\nimport FormControl from '../components/FormControl.js';\nimport Grid from '../components/Grid.js';\nimport InputLabel from '../components/InputLabel.js';\nimport MenuItem from '../components/MenuItem.js';\nimport Select from '../components/Select.js';\nimport TextField from '../components/TextField.js';\nimport Typography from '../components/Typography.js';\n\nimport TableView from './TableView.js';\nimport GraphView from './GraphView.js';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  title: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  formControl: {\n    width: '80%',\n  },\n  properties: {\n    width: '80%',\n  },\n}));\n\nconst Main = () => {\n  const classes = useStyles();\n  const [fetchDisabled, setFetchDisabled] = useState(false);\n  const [progress, setProgress] = useState('');\n  const [orderBy, setOrderBy] = useState('date');\n  const [order, setOrder] = useState('DESC');\n  const [error, setError] = useState(false);\n  const [item, setItem] = useState(['古い順', '新しい順']);\n\n  const handleOrderByChange = (event) => {\n    setOrderBy(event.target.value);\n    if (event.target.value === 'date') setItem(['古い順', '新しい順']);\n    else setItem(['50音順 (A~Z)', '50音順 (Z~A)']);\n  }\n\n  const handleOrderChange = (event) => {\n    setOrder(event.target.value);\n  };\n\n  const handleLimitChange = (event) => {\n    if (event.target.value < 0) return setError(true);\n    if (event.target.value === '') return setError(true);\n    setError(false);\n  }\n\n  const fetch_posts_from_db = () => {\n    if (error) return false;\n    if (!fetchDisabled) setFetchDisabled(true);\n\n    let query = '';\n    for (const column_name of ['name', 'limit']) {\n      let prefix = query === '' ? '?' : '&';\n      if (column_name === 'limit') {\n        query = `${query}${prefix}order=${orderBy},${order}`;\n        prefix = '&';\n      }\n\n      const column_value = document.querySelector(`#${column_name}`).value;\n      if (column_value !== '' && column_value !== '*') query = `${query}${prefix}${column_name}=${column_value}`;\n    }\n\n    fetch(`/api${query}`)\n    .then((response) => response.json())\n    .then((data) => {\n      setProgress(data.result);\n      // 連打してサーバーへの過度なアクセスを防ぐ為に 2.5 秒のクールダウンを発生させる\n      setTimeout(() => setFetchDisabled(false), 2500);\n    });\n  }\n\n  return (\n    <>\n      <Container>\n        <Typography variant='h5' className={classes.title}>💪進捗リスト💪</Typography>\n\n        <Grid container justify='center' className={classes.margin}>\n          <Grid item xs={3}>\n            <TextField\n              id='limit'\n              label='表示件数'\n              type='number'\n              placeholder='全件'\n              defaultValue={100}\n              autoComplete='off'\n              className={classes.properties}\n              onChange={handleLimitChange}\n              error={error}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              id='name'\n              label='ユーザー名'\n              placeholder='全員'\n              defaultValue='*'\n              autoComplete='off'\n              className={classes.properties}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container justify='center' className={classes.margin}>\n          <Grid item xs={3}>\n            <FormControl className={classes.formControl}>\n              <InputLabel id='order-by-select'>ソートする値</InputLabel>\n              <Select\n                labelId='order-by-select'\n                id='order-by-select'\n                value={orderBy}\n                defaultValue='date'\n                onChange={handleOrderByChange}\n              >\n                <MenuItem value='date'>日付</MenuItem>\n                <MenuItem value='name'>名前</MenuItem>\n                <MenuItem value='content'>内容</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={3}>\n            <FormControl className={classes.formControl}>\n              <InputLabel id='order-select'>ソート順</InputLabel>\n              <Select\n                labelId='order-select'\n                id='order-select'\n                value={order}\n                defaultValue='ASC'\n                onChange={handleOrderChange}\n              >\n                <MenuItem value='ASC'>{item[0]}</MenuItem>\n                <MenuItem value='DESC'>{item[1]}</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n\n        <Button\n          variant='outlined'\n          color='secondary'\n          onClick={fetch_posts_from_db}\n          className={classes.margin}\n          disabled={fetchDisabled}\n        >\n          データを取得する\n        </Button>\n      </Container>\n\n      {/* <GraphView /> */}\n      <TableView error={error} progress={progress} />\n    </>\n  );\n}\n\nexport default Main;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport Main from './pages/Main';\nimport './index.css';\n\nReactDOM.render(<Main />, document.querySelector('#root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}