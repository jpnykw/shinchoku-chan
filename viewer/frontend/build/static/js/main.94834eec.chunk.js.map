{"version":3,"sources":["reportWebVitals.js","components/Button.js","components/Container.js","components/FormControl.js","components/Grid.js","components/InputLabel.js","components/MenuItem.js","components/Select.js","components/Table.js","components/TableBody.js","components/TableCell.js","components/TableContainer.js","components/TableHead.js","components/TableRow.js","components/TextField.js","components/Typography.js","pages/Main.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Button","props","Container","FormControl","Grid","InputLabel","MenuItem","Select","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","Typography","useStyles","makeStyles","theme","root","margin","spacing","title","marginTop","marginBottom","tableGrid","properties","width","formControl","Main","classes","useState","fetchDisabled","setFetchDisabled","progress","setProgress","orderBy","setOrderBy","order","setOrder","error","setError","variant","className","container","justify","item","xs","id","label","type","placeholder","defaultValue","autoComplete","onChange","event","target","value","labelId","color","onClick","query","column_name","prefix","column_value","document","querySelector","fetch","response","json","data","result","setTimeout","disabled","JSON","parse","length","table","map","row_data_packet","key","name","content","date","ReactDOM","render"],"mappings":"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","file":"static/js/main.94834eec.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { default as MaterialButton } from '@material-ui/core/Button';\n\nconst Button = (props) => {\n  return (\n    <MaterialButton {...props} />\n  );\n};\n\nexport default Button;","import { default as MaterialContainer } from '@material-ui/core/Container';\n\nconst Container = (props) => {\n  return (\n    <MaterialContainer {...props} />\n  );\n};\n\nexport default Container;","import { default as MaterialFormControl } from '@material-ui/core/FormControl';\n\nconst FormControl = (props) => {\n  return (\n    <MaterialFormControl {...props} />\n  );\n};\n\nexport default FormControl;","import { default as MaterialGrid } from '@material-ui/core/Grid';\n\nconst Grid = (props) => {\n  return (\n    <MaterialGrid {...props} />\n  );\n};\n\nexport default Grid;","import { default as MaterialInputLabel } from '@material-ui/core/InputLabel';\n\nconst InputLabel = (props) => {\n  return (\n    <MaterialInputLabel {...props} />\n  );\n};\n\nexport default InputLabel;","import { default as MaterialMenuItem } from '@material-ui/core/MenuItem';\n\nconst MenuItem = (props) => {\n  return (\n    <MaterialMenuItem {...props} />\n  );\n};\n\nexport default MenuItem;","import { default as MaterialSelect } from '@material-ui/core/Select';\n\nconst Select = (props) => {\n  return (\n    <MaterialSelect {...props} />\n  );\n};\n\nexport default Select;","import { default as MaterialTable } from '@material-ui/core/Table';\n\nconst Table = (props) => {\n  return (\n    <MaterialTable {...props} />\n  );\n};\n\nexport default Table;","import { default as MaterialTableBody } from '@material-ui/core/TableBody';\n\nconst TableBody = (props) => {\n  return (\n    <MaterialTableBody {...props} />\n  );\n};\n\nexport default TableBody;","import { default as MaterialTableCell } from '@material-ui/core/TableCell';\n\nconst TableCell = (props) => {\n  return (\n    <MaterialTableCell {...props} />\n  );\n};\n\nexport default TableCell;","import { default as MaterialTableContainer } from '@material-ui/core/TableContainer';\n\nconst TableContainer = (props) => {\n  return (\n    <MaterialTableContainer {...props} />\n  );\n};\n\nexport default TableContainer;","import { default as MaterialTableHead } from '@material-ui/core/TableHead';\n\nconst TableHead = (props) => {\n  return (\n    <MaterialTableHead {...props} />\n  );\n};\n\nexport default TableHead;","import { default as MaterialTableRow } from '@material-ui/core/TableRow';\n\nconst TableRow = (props) => {\n  return (\n    <MaterialTableRow {...props} />\n  );\n};\n\nexport default TableRow;","import { default as MaterialTextField } from '@material-ui/core/TextField';\n\nconst TextField = (props) => {\n  return (\n    <MaterialTextField {...props} />\n  );\n};\n\nexport default TextField;","import { default as MaterialTypography } from '@material-ui/core/Typography';\n\nconst Typography = (props) => {\n  return (\n    <MaterialTypography {...props} />\n  );\n};\n\nexport default Typography;","import { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '../components/Button.js';\nimport Container from '../components/Container.js';\nimport FormControl from '../components/FormControl.js';\nimport Grid from '../components/Grid.js';\nimport InputLabel from '../components/InputLabel.js';\nimport MenuItem from '../components/MenuItem.js';\nimport Select from '../components/Select.js';\nimport Table from '../components/Table.js';\nimport TableBody from '../components/TableBody.js';\nimport TableCell from '../components/TableCell.js';\nimport TableContainer from '../components/TableContainer.js';\nimport TableHead from '../components/TableHead.js';\nimport TableRow from '../components/TableRow.js';\nimport TextField from '../components/TextField.js';\nimport Typography from '../components/Typography.js';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  title: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  tableGrid: {\n    marginTop: theme.spacing(2),\n  },\n  properties: {\n    width: '80%',\n  },\n  formControl: {\n    width: '80%',\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  }\n}));\n\nconst Main = () => {\n  const classes = useStyles();\n  const [fetchDisabled, setFetchDisabled] = useState(false);\n  const [progress, setProgress] = useState('');\n  const [orderBy, setOrderBy] = useState('date');\n  const [order, setOrder] = useState('DESC');\n  const [error, setError] = useState(false);\n\n  const handleOrderByChange = (event) => {\n    setOrderBy(event.target.value);\n  }\n\n  const handleOrderChange = (event) => {\n    setOrder(event.target.value);\n  };\n\n  const handleLimitChange = (event) => {\n    if (event.target.value < 0) return setError(true);\n    if (event.target.value === '') return setError(true);\n    setError(false);\n  }\n\n  const fetch_posts_from_db = () => {\n    if (error) return false;\n    if (!fetchDisabled) setFetchDisabled(true);\n\n    let query = '';\n    for (const column_name of ['name', 'limit']) {\n      let prefix = query === '' ? '?' : '&';\n      if (column_name === 'limit') {\n        query = `${query}${prefix}order=${orderBy},${order}`;\n        prefix = '&';\n      }\n\n      const column_value = document.querySelector(`#${column_name}`).value;\n      if (column_value !== '' && column_value !== '*') query = `${query}${prefix}${column_name}=${column_value}`;\n    }\n\n    fetch(`/api${query}`)\n    .then((response) => response.json())\n    .then((data) => {\n      setProgress(data.result);\n      // 連打してサーバーへの過度なアクセスを防ぐ為に 2.5 秒のクールダウンを発生させる\n      setTimeout(() => setFetchDisabled(false), 2500);\n    });\n  }\n\n  return (\n    <>\n      <Container>\n        <Typography variant='h5' className={classes.title}>💪進捗リスト💪</Typography>\n\n        <Grid container justify='center' className={classes.margin}>\n          <Grid item xs={3}>\n            <TextField\n              id='limit'\n              label='表示件数'\n              type='number'\n              placeholder='全件'\n              defaultValue={100}\n              autoComplete='off'\n              className={classes.properties}\n              onChange={handleLimitChange}\n              error={error}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              id='name'\n              label='ユーザー名'\n              placeholder='全員'\n              defaultValue='*'\n              autoComplete='off'\n              className={classes.properties}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container justify='center' className={classes.margin}>\n          <Grid item xs={3}>\n            <FormControl className={classes.formControl}>\n              <InputLabel id='order-by-select'>ソートする値</InputLabel>\n              <Select\n                labelId='order-by-select'\n                id='order-by-select'\n                value={orderBy}\n                defaultValue='date'\n                onChange={handleOrderByChange}\n              >\n                <MenuItem value='date'>日付</MenuItem>\n                <MenuItem value='name'>名前</MenuItem>\n                <MenuItem value='content'>内容</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={3}>\n            <FormControl className={classes.formControl}>\n              <InputLabel id='order-select'>ソート順</InputLabel>\n              <Select\n                labelId='order-select'\n                id='order-select'\n                value={order}\n                defaultValue='ASC'\n                onChange={handleOrderChange}\n              >\n                <MenuItem value='ASC'>昇順</MenuItem>\n                <MenuItem value='DESC'>降順</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n\n        <Button\n          variant='outlined'\n          color='secondary'\n          onClick={fetch_posts_from_db}\n          className={classes.margin}\n          disabled={fetchDisabled}\n        >\n          データを取得する\n        </Button>\n      </Container>\n\n      <Grid container justify = 'center' className={classes.tableGrid}>\n        {\n          error || progress === '' || JSON.parse(progress).length === 0 ?\n            (\n              <Typography>\n                {error ? '使えない値が入力されているよ' : progress === '' ? 'データを取得するボタンを押してね' : 'データが見つからないよ！'}\n              </Typography>\n            )\n          :\n            (\n              <TableContainer>\n                <Table className={classes.table} aria-label='simple table'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>ユーザー</TableCell>\n                      <TableCell>投稿日時</TableCell>\n                      <TableCell>投稿内容</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {JSON.parse(progress).map((row_data_packet, key) => {\n                      const { name, content, date } = row_data_packet;\n                      return (\n                        <TableRow key={key}>\n                          <TableCell>{ name }</TableCell>\n                          <TableCell>{ date }</TableCell>\n                          <TableCell>{ content }</TableCell>\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            )\n        }\n      </Grid>\n    </>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport Main from './pages/Main';\nimport './index.css';\n\nReactDOM.render(<Main />, document.querySelector('#root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}